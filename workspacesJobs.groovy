def node = 'irods'
def workspace = '/var/tmp/jenkins-WS'
def databases = ['plas029n', 'plas029s', 'toxo029s', 'toxo029n', 'crypto029s']

def loadingJobDesc = { db ->
  def thisBuild = Thread.currentThread().executable // a hudson.model.FreeStyleBuild
  def thisProject = thisBuild.project // a hudson.model.FreeStyleProject
  return """
    Loads data from iRODS into ${db}.
    <p>
    <font color='red'>This project configuration is auto-generated by
    <a href="/${thisProject.url}">${thisProject.displayName}</a>. <br>
    (Generated by <a href="/${thisBuild.url}">${thisBuild.displayName}<a/>)
  """.stripIndent()
}

def loadingStep = { db ->
  return """
    export BASE_GUS="\$WORKSPACE"
    export GUS_HOME="\$BASE_GUS/gus_home"
    export PROJECT_HOME="\$BASE_GUS/project_home"
    export PATH="\$GUS_HOME/bin:\$PROJECT_HOME/install/bin:\$PATH"
    export PERL5LIB="\$GUS_HOME/lib/perl"


    echo fetching data from iRODS
    echo loading data into ${db}

    # example command
    fgpReplace || true

    sleep 30
  """.stripIndent()
}

def makeWorkspace = {
  return """
    export BASE_GUS="\$WORKSPACE"
    export GUS_HOME="\$BASE_GUS/gus_home"
    export PROJECT_HOME="\$BASE_GUS/project_home"
    export PATH="\$GUS_HOME/bin:\$PROJECT_HOME/install/bin:\$PATH"
    export PERL5LIB="\$GUS_HOME/lib/perl"

    mkdir -p  "\$GUS_HOME/config"
    if [ ! -f "\$GUS_HOME/config/gus.config" ]; then
      cp "\$PROJECT_HOME/install/gus.config.sample" "\$GUS_HOME/config/gus.config"
    fi

    build FgpUtil install -append

    sleep 15
  """.stripIndent()
}

def masterTriggerStep = {
  return """
    jenkins.model.Jenkins.instance.items.each {
      if (it.name ==~ /^load_from_irods_to_.*/) {
        println "Starting " + it.name
        hudson.model.Hudson.instance.queue.schedule(it, 0)
      }
    }
  """.stripIndent()
}

job('master_trigger') {
  description('Trigger all load_from_irods_to_.* jobs')
  steps {
    systemGroovyCommand(masterTriggerStep())
  }
}

job('makeSharedWorkspace') {
  description('')
  blockOn('^load_from_irods_to_.*')
  label(node)
  customWorkspace(workspace)
  scm {
    svn {
      location('https://www.cbil.upenn.edu/svn/gus/install/trunk') {
        directory('project_home/install')
      }
      location('https://www.cbil.upenn.edu/svn/gus/FgpUtil/trunk') {
        directory('project_home/FgpUtil')
      }
    }
  }
  triggers {
    scm('H H * * *')
  }
  steps {
    shell(makeWorkspace())
  }
}

for(db in databases) {
  jobName = 'load_from_irods_to_' + db
  job(jobName) {
    description(loadingJobDesc(db))
    blockOn('makeSharedWorkspace')
    label(node)
    customWorkspace(workspace)
    steps {
      shell(loadingStep(db))
    }
  }
}